function makeTexture_MSeq

%generates noise pattern based on M sequence
%using pre-generated M sequence for a 16x 16 grid from Farran (originally
%from the Usrey lab)

global screenPTR Gseq Mstate loopTrial 

global Gtxtr

if ~isempty(Gtxtr)
    Screen('Close',Gtxtr);  %First clean up: Get rid of all textures/offscreen windows
end

Gtxtr = [];
Gseq = [];


%get parameters
P = getParamStruct;

%read M sequence
load([P.seqfile '.mat']);

%reshape M sequence

%generates matrix st
nrImg=size(selectedImages,3);
IDim=size(selectedImages);

%make image domain
imgdom=[1:nrImg];

%generate random sequence
s = RandStream.create('mrg32k3a','NumStreams',1,'Seed',datenum(date)+1000*str2double(Mstate.unit)+str2double(Mstate.expt)+P.rseed);

%base sequence
imgseq=repmat(imgdom,1,P.nReps);
%add blanks
imgseq=[imgseq ones(1,P.nBlanks)*(nrImg+1)];
%reorder
ridx=randperm(s,length(imgseq));
imgseq=imgseq(ridx);


idx=find(imgseq==nrImg+1);
blankflag = zeros(1,length(imgseq));
blankflag(idx)=1;

%save in Gseq
Gseq.blankflag=blankflag;
Gseq.imgseq=imgseq;

%generate images
for i=1:nrImg
    im = double(squeeze(selectedImages(:,:,i)))/255;
    Gtxtr(i)=Screen(screenPTR, 'MakeTexture', im,[],[],2);
end


%save sequence data
if Mstate.running
    saveLog(Gseq,P.rseed,loopTrial)  %append log file with the latest sequence
end


